<<<<<<< HEAD
shiny::runApp()
runApp()
shiny::runApp()
library(shinythemes)
runApp()
runApp()
runApp()
runApp()
TasaReemplazo <- function(edad, salario, anios_aporte){
if(salario > 460){incremento <- 0.021540}
else{incremento <- 0.025339 }
pension <- Pension(edad, salario, anios_aporte, incremento)
ultimo_sueldo <- salario * (1+incremento)^(anios_aporte - 1)
tasa <- (pension / ultimo_sueldo) * 100
return(tasa)
}
runApp()
runApp()
inflacion <- 0.02154
Pension(25,850, (65-25), 0.02154)
# Función para calculo de la pensión
Pension <- function(edad, salario, anios_aporte, inflacion){
# Creamos un vector con los últimos 5 mejores salarios
mejores_5_salarios <- sapply(1:5, function(i) {
salario * (1 + inflacion)^(anios_aporte - i)
})
# pension = promedio * coef
prom <- sum(mejores_5_salarios) / 5
coef <- Coeficiente$Coef[Coeficiente$An.Imposiciones == anios_aporte]
pension <- prom * coef
return(pension)
}
Pension(25,850, (65-25), 0.02154)
Coeficiente <- data.frame(An.Imposiciones = c(5:40),
Coef = c(0.4375, 0.4500, 0.4625,0.4750,
0.4875, 0.5000, 0.5125, 0.5250,
0.5375, 0.5500, 0.5625, 0.5750,
0.5875, 0.6000, 0.6125, 0.6250,
0.6375, 0.6500, 0.6625, 0.6750,
0.6875, 0.7000, 0.7125, 0.7250,
0.7375, 0.7500, 0.7625, 0.7750,
0.7875, 0.8000, 0.8125, 0.8325,
0.8605, 0.8970, 0.9430, 1.0000))
# Añadir nuevas filas para cuando supera los 40 años de aportes
for (i in 41:100) {
ultimo_coef <- tail(Coeficiente$Coef, 1)
nuevo_coef <- ultimo_coef + 0.0125
nueva_fila <- data.frame(An.Imposiciones = i, Coef = nuevo_coef)
Coeficiente <- rbind(Coeficiente, nueva_fila)
}
Pension(25,850, (65-25), 0.02154)
edad <- 25
salario <- 850
anios_aporte <- (65-25)
inflacion <- 0.02154
pension <- Pension(edad, salario, anios_aporte, inflacion)
pension
ultimo_sueldo <- salario * (1+inflacion)^(anios_aporte - 1)
ultimo_sueldo
tasa <- (pension / ultimo_sueldo) * 100
tasa
tasa
ultimo_sueldo/pension
=======
i = interes,
type = "due")
}
View(ev_res)
runApp()
View(ev_res)
runApp()
pen <- Pension(edad_inicio, salario_ini, num_anios)[[1]]
pen
ev_res <- data.frame(
anio = c(anio_ini:anio_fin),
edad = c(edad_inicio:(edad_jubilacion-1)),
res_acum = numeric(num_anios)
)
for (j in c(1:num_anios)) {
ev_res[j,3] <-  VSn(C = (salario_ini * IVM ),# * annuity(i = crec_salarios_12, n=12, type = "due"), #* (1+interes)^(j-1)
q = (1+crec_salarios) ,
n = j , #años de aporte hasta el momento
i = interes,
type = "due")
}
View(ev_res)
pen <- Pension(edad_inicio, salario_ini, num_anios)[[1]]
pen
ev_res2 <- data.frame(
anio = c((anio_fin+1):anio_muerte),
edad = c(edad_jubilacion:100),
res_acum = numeric(num_anios_pension)
)
View(ev_res2)
j=1
View(ev_res2)
axn(TH,
x = ev_res2[j,2],
n = 12,
i = crec_pensiones_12,
payment = "due")
pen*axn(TH,
x = ev_res2[j,2],
n = 12,
i = crec_pensiones_12,
payment = "due")
pen
ev_res[nrow(ev_res),3]
ev_res <- data.frame(
anio = c(anio_ini:anio_fin),
edad = c(edad_inicio:(edad_jubilacion-1)),
res_acum = numeric(num_anios)
)
for (j in c(1:num_anios)) {
ev_res[j,3] <-  VSn(C = (salario_ini * IVM ) * annuity(i = crec_salarios_12, n=12, type = "due"),
q = (1+crec_salarios) ,
n = j , #años de aporte hasta el momento
i = interes,
type = "due")
}
pen <- Pension(edad_inicio, salario_ini, num_anios)[[1]]
ev_res2 <- data.frame(
anio = c((anio_fin+1):anio_muerte),
edad = c(edad_jubilacion:100),
res_acum = numeric(num_anios_pension)
)
i_asterisco <- (interes-crec_pensiones)/(1+crec_pensiones)
j=1
ev_res[nrow(ev_res),3]
pen <- Pension(edad_inicio, salario_ini, num_anios)[[1]]
ev_res2 <- data.frame(
anio = c((anio_fin+1):anio_muerte),
edad = c(edad_jubilacion:100),
res_acum = numeric(num_anios_pension)
)
i_asterisco <- (interes-crec_pensiones)/(1+crec_pensiones)
for (j in c(1:num_anios_pension)) {
# j=1
#
# C <- pen*axn(TH,
#              x = ev_res2[j,2],
#              n = 12,
#              i = crec_pensiones_12,
#              payment = "due")
#
# ev_res2[j,3] <-  ev_res[nrow(ev_res),3] - C*axn(TH,
#                                               x = edad_jubilacion,
#                                               n = 100-ev_res2[j,2],
#                                               i = i_asterisco,
#                                               payment = "due")
ev_res2[j,3] <-  ev_res[nrow(ev_res),3] - pen*axn(TH,
x = ev_res2[j,2],
n = 12*(100-ev_res2[j,2]),
i = crec_pensiones_12,
payment = "due")
}
View(ev_res2)
View(ev_res)
j=1
ev_res2[j,2]
100-ev_res2[j,2]
j=2
100-ev_res2[j,2]
ev_res2[j,2]
j=1
ev_res2[j,2]
ev_res2[j,2]-edad_jubilacion
ev_res2[j,2]-edad_jubilacion+1
j=2
ev_res2[j,2]-edad_jubilacion+1
# Cálculo de la renta actuarial prepagable
## !!!!!!!!!!!!!!!!!!!!!!!!!  NO ESTÁ CORREGIDA !!!!!!!!!!!!!!!!!!!!!!!
axn_m <- function(TH,x,n,m,i,k=0,payment="due"){#pordefecto pre
if(payment == "due"){
ax<- axn(TH,x=x,n=n,i=i,payment = "due")- ((m-1)/(2*m))*(31-Exn(TH,x=x,n=n,i=i))
return(ax)
} else {
ax <- axn(TH,x=x,n=n,i=i,payment = "due")- ((m+1)/(2*m))*(1-Exn(TH,x=x,n=n,i=i))
return(ax)
}
}
ev_res2[j,2]-edad_jubilacion+1
pen <- Pension(edad_inicio, salario_ini, num_anios)[[1]]
ev_res2 <- data.frame(
anio = c((anio_fin+1):anio_muerte),
edad = c(edad_jubilacion:100),
res_acum = numeric(num_anios_pension)
)
i_asterisco <- (interes-crec_pensiones)/(1+crec_pensiones)
for (j in c(1:num_anios_pension)) {
# j=2
#
# C <- pen*axn(TH,
#              x = ev_res2[j,2],
#              n = 12,
#              i = crec_pensiones_12,
#              payment = "due")
#
# ev_res2[j,3] <-  ev_res[nrow(ev_res),3] - C*axn(TH,
#                                               x = edad_jubilacion,
#                                               n = 100-ev_res2[j,2],
#                                               i = i_asterisco,
#                                               payment = "due")
ev_res2[j,3] <-  ev_res[nrow(ev_res),3] - pen*12*axn_m(TH,
x=edad_jubilacion,
n=ev_res2[j,2]-edad_jubilacion+1,
m = 12,
i = crec_pensiones ,
k=0,
payment="due")
}
View(ev_res2)
127611.9618
293989.35
127612 - 293989.35
ev_res[nrow(ev_res),3]
j=1
pen*12*axn_m(TH,
x=edad_jubilacion,
n=ev_res2[j,2]-edad_jubilacion+1,
m = 12,
i = crec_pensiones ,
k=0,
payment="due")
axn_m(TH,
x=edad_jubilacion,
n=ev_res2[j,2]-edad_jubilacion+1,
m = 12,
i = crec_pensiones ,
k=0,
payment="due")
axn_m(TH = TH,x = 50,n = 5,m = 12,k=0,i = 0.085,payment = "immediate")
edad_jubilacion
ev_res2[j,2]-edad_jubilacion+1
12
crec_pensiones
axn_m(TH = TH,x=edad_jubilacion, n=ev_res2[j,2]-edad_jubilacion+1, m = 12, i = crec_pensiones , k=0,payment="due")
ev_res2[j,2]-edad_jubilacion+1
axn(TH,x=edad_jubilacion,n=ev_res2[j,2]-edad_jubilacion+1,i=crec_pensiones,payment = "due")
((12-1)/(2*12))*(1-Exn(TH,x=edad_jubilacion,n=ev_res2[j,2]-edad_jubilacion+1,i=crec_pensiones))
axn(TH,x=edad_jubilacion,n=ev_res2[j,2]-edad_jubilacion+1,i=crec_pensiones,payment = "due")- ((12-1)/(2*12))*(1-Exn(TH,x=edad_jubilacion,n=ev_res2[j,2]-edad_jubilacion+1,i=crec_pensiones))
x=edad_jubilacion,
x=edad_jubilacion
n=ev_res2[j,2]-edad_jubilacion+1
m = 12
i = crec_pensiones
i
axn(TH,x=x,n=n,i=i,payment = "due")
((m-1)/(2*m))*(1-Exn(TH,x=x,n=n,i=i))
axn(TH,x=x,n=n,i=i,payment = "due")- ((m-1)/(2*m))*(1-Exn(TH,x=x,n=n,i=i))
axn_m(TH, x=edad_jubilacion, n=ev_res2[j,2]-edad_jubilacion+1,m = 12,i = crec_pensiones ,k=0,payment="due")
axn(TH,x=x,n=n,i=i,payment = "due")- ((m-1)/(2*m))*(1-Exn(TH,x=x,n=n,i=i))
j=1
ev_res2[j,3]
ev_res[nrow(ev_res),3]
pen*12*axn(TH,x=x,n=n,i=i,payment = "due")- ((m-1)/(2*m))*(1-Exn(TH,x=x,n=n,i=i))
edad_inicio <- 25
edad_jubilacion <- 60
salario_ini <- 600
crec_pensiones <- 1.8261/100; crec_pensiones_12 <- (1+crec_pensiones)^(1/12)-1
interes <- 6.2500 /100 #tasa actuarial
crec_salarios <- 0.02154; crec_salarios_12 <- (1+crec_salarios)^(1/12)-1 #superiodal
IVM <- 11.06/100
anio_ini <- 2010
anio_fin <- anio_ini + (edad_jubilacion-edad_inicio-1)
num_anios <- edad_jubilacion - edad_inicio
anio_muerte <- anio_fin+1 + (100-edad_jubilacion)
num_anios_pension <- length(c((anio_fin+1):anio_muerte))
# Crecimiento de la reserva ( cotizaciones ) -----------------------------------
ev_res <- data.frame(
anio = c(anio_ini:anio_fin),
edad = c(edad_inicio:(edad_jubilacion-1)),
res_acum = numeric(num_anios)
)
for (j in c(1:num_anios)) {
ev_res[j,3] <-  VSn(C = (salario_ini * IVM ) * annuity(i = crec_salarios_12, n=12, type = "due"),
q = (1+crec_salarios) ,
n = j , #años de aporte hasta el momento
i = interes,
type = "due")
}
View(ev_res)
pen <- Pension(edad_inicio, salario_ini, num_anios)[[1]]
pen
ev_res2 <- data.frame(
anio = c((anio_fin+1):anio_muerte),
edad = c(edad_jubilacion:100),
res_acum = numeric(num_anios_pension)
)
i_asterisco <- (interes-crec_pensiones)/(1+crec_pensiones)
for (j in c(1:num_anios_pension)) {
x=edad_jubilacion
n=ev_res2[j,2]-edad_jubilacion+1
m = 12
i = crec_pensiones
ev_res2[j,3] <-  ev_res[nrow(ev_res),3] - pen*12*axn(TH,x=x,n=n,i=i,payment = "due")- ((m-1)/(2*m))*(1-Exn(TH,x=x,n=n,i=i))
}
View(ev_res2)
edad <- c(ev_res[,2],ev_res2[,2])
reservas <- c(ev_res[,3],ev_res2[,3])
highchart() %>%
hc_chart(type = "area") %>%
hc_title(text = "Evolución de Reservas por Edad") %>%
hc_xAxis(categories = edad, title = list(text = "Edad")) %>%
hc_yAxis(title = list(text = "Reservas")) %>%
hc_tooltip(shared = TRUE, valueDecimals = 0) %>%
hc_plotOptions(area = list(
marker = list(enabled = FALSE),
enableMouseTracking = TRUE
)) %>%
hc_add_series(
name = "Aportación",
data = reservas[1:35],  # datos positivos hasta 150000
color = "blue",
fillOpacity = 0.3
) %>%
hc_add_series(
name = "Jubilación",
data = c(rep(NA, 34), reservas[35:75]),  # datos decreciendo de 150000 a 0
color = "green",
fillOpacity = 0.3
) %>%
hc_add_series(
name = "Jubilación -",
data = c(rep(NA, 75), reservas[76:length(reservas)]),  # datos decreciendo de 0 a -150000
color = "red",
fillOpacity=0.3
)
runApp()
94/127
c(ev_res[,2],ev_res2[,2])
c(ev_res[,3],ev_res2[,3])
runApp()
runApp()
list(edad,reservas)
list(edad,reservas)[[1]]
class(list(edad,reservas)[[1]])
typeof(list(edad,reservas)[[1]])
length(list(edad,reservas)[[1]])
max(which(reservas > 0))
min(which(reservas < 0))
reservas
which(max(reservas))
reservas
max(reservas)
which(reservas==max(reservas))
runApp()
max_res <- which(reservas==max(reservas))
last_pos <- max(which(reservas > 0))
first_neg <- min(which(reservas < 0))
highchart() %>%
hc_chart(type = "area") %>%
hc_title(text = "Evolución de Reservas por Edad") %>%
hc_xAxis(categories = edad, title = list(text = "Edad")) %>%
hc_yAxis(title = list(text = "Reservas")) %>%
hc_tooltip(shared = TRUE, valueDecimals = 0) %>%
hc_plotOptions(area = list(
marker = list(enabled = FALSE),
enableMouseTracking = TRUE
)) %>%
hc_add_series(
name = "Aportación",
data = reservas[1:max_res],  # datos positivos hasta 150000
color = "blue",
fillOpacity = 0.3
) %>%
hc_add_series(
name = "Jubilación",
data = c(rep(NA, max_res-1), reservas[max_res:last_pos]),  # datos decreciendo de 150000 a 0
color = "green",
fillOpacity = 0.3
) %>%
hc_add_series(
name = "Jubilación -",
data = c(rep(NA, last_pos), reservas[(last_pos+1):length(reservas)]),  # datos decreciendo de 0 a -150000
color = "red",
fillOpacity=0.3
)
highchart() %>%
hc_chart(type = "area") %>%
hc_title(text = "Evolución de Reservas por Edad") %>%
hc_xAxis(categories = edad, title = list(text = "Edad")) %>%
hc_yAxis(title = list(text = "Reservas")) %>%
hc_tooltip(shared = TRUE, valueDecimals = 0) %>%
hc_plotOptions(area = list(
marker = list(enabled = FALSE),
enableMouseTracking = TRUE
)) %>%
hc_add_series(
name = "Aportación",
data = reservas[1:max_res],  # datos positivos hasta 150000
color = "blue",
fillOpacity = 0.3
) %>%
hc_add_series(
name = "Jubilación",
data = c(rep(NA, max_res-1), reservas[max_res:last_pos]),  # datos decreciendo de 150000 a 0
color = "green",
fillOpacity = 0.3
) %>%
hc_add_series(
name = "Jubilación -",
data = c(rep(NA, last_pos), reservas[(last_pos):length(reservas)]),  # datos decreciendo de 0 a -150000
color = "red",
fillOpacity=0.3
)
highchart() %>%
hc_chart(type = "area") %>%
hc_title(text = "Evolución de Reservas por Edad") %>%
hc_xAxis(categories = edad, title = list(text = "Edad")) %>%
hc_yAxis(title = list(text = "Reservas")) %>%
hc_tooltip(shared = TRUE, valueDecimals = 0) %>%
hc_plotOptions(area = list(
marker = list(enabled = FALSE),
enableMouseTracking = TRUE
)) %>%
hc_add_series(
name = "Aportación",
data = reservas[1:max_res],  # datos positivos hasta 150000
color = "blue",
fillOpacity = 0.3
) %>%
hc_add_series(
name = "Jubilación",
data = c(rep(NA, max_res-1), reservas[max_res:last_pos]),  # datos decreciendo de 150000 a 0
color = "green",
fillOpacity = 0.3
) %>%
hc_add_series(
name = "Jubilación -",
data = c(rep(NA, last_pos), reservas[(last_pos+1):length(reservas)]),  # datos decreciendo de 0 a -150000
color = "red",
fillOpacity=0.3
)
highchart() %>%
hc_chart(type = "area") %>%
hc_title(text = "Evolución de Reservas por Edad") %>%
hc_xAxis(categories = edad, title = list(text = "Edad")) %>%
hc_yAxis(title = list(text = "Reservas")) %>%
hc_tooltip(shared = TRUE, valueDecimals = 0) %>%
hc_plotOptions(area = list(
marker = list(enabled = FALSE),
enableMouseTracking = TRUE
)) %>%
hc_add_series(
name = "Aportación",
data = reservas[1:max_res],  # datos positivos hasta 150000
color = "blue",
fillOpacity = 0.3
) %>%
hc_add_series(
name = "Jubilación",
data = c(rep(NA, max_res-1), reservas[max_res:last_pos]),  # datos decreciendo de 150000 a 0
color = "green",
fillOpacity = 0.3
) %>%
hc_add_series(
name = "Jubilación -",
data = c(rep(NA, last_pos-1), reservas[(last_pos+1):length(reservas)]),  # datos decreciendo de 0 a -150000
color = "red",
fillOpacity=0.3
)
highchart() %>%
hc_chart(type = "area") %>%
hc_title(text = "Evolución de Reservas por Edad") %>%
hc_xAxis(categories = edad, title = list(text = "Edad")) %>%
hc_yAxis(title = list(text = "Reservas")) %>%
hc_tooltip(shared = TRUE, valueDecimals = 0) %>%
hc_plotOptions(area = list(
marker = list(enabled = FALSE),
enableMouseTracking = TRUE
)) %>%
hc_add_series(
name = "Aportación",
data = reservas[1:max_res],  # datos positivos hasta 150000
color = "blue",
fillOpacity = 0.3
) %>%
hc_add_series(
name = "Jubilación",
data = c(rep(NA, max_res-1), reservas[max_res:last_pos]),  # datos decreciendo de 150000 a 0
color = "green",
fillOpacity = 0.3
) %>%
hc_add_series(
name = "Jubilación -",
data = c(rep(NA, last_pos), reservas[(last_pos+1):length(reservas)]),  # datos decreciendo de 0 a -150000
color = "red",
fillOpacity=0.3
)
highchart() %>%
hc_chart(type = "area") %>%
hc_title(text = "Evolución de Reservas por Edad") %>%
hc_xAxis(categories = edad, title = list(text = "Edad")) %>%
hc_yAxis(title = list(text = "Reservas")) %>%
hc_tooltip(shared = TRUE, valueDecimals = 0) %>%
hc_plotOptions(area = list(
marker = list(enabled = FALSE),
enableMouseTracking = TRUE
)) %>%
hc_add_series(
name = "Aportación",
data = reservas[1:max_res],  # datos positivos hasta 150000
color = "blue",
fillOpacity = 0.3
) %>%
hc_add_series(
name = "Jubilación",
data = c(rep(NA, max_res-1), reservas[max_res:last_pos]),  # datos decreciendo de 150000 a 0
color = "green",
fillOpacity = 0.3
) %>%
hc_add_series(
name = "Jubilación -",
data = c(rep(NA, last_pos), reservas[(last_pos):length(reservas)]),  # datos decreciendo de 0 a -150000
color = "red",
fillOpacity=0.3
)
highchart() %>%
hc_chart(type = "area") %>%
hc_title(text = "Evolución de Reservas por Edad") %>%
hc_xAxis(categories = edad, title = list(text = "Edad")) %>%
hc_yAxis(title = list(text = "Reservas")) %>%
hc_tooltip(shared = TRUE, valueDecimals = 0) %>%
hc_plotOptions(area = list(
marker = list(enabled = FALSE),
enableMouseTracking = TRUE
)) %>%
hc_add_series(
name = "Aportación",
data = reservas[1:max_res],  # datos positivos hasta 150000
color = "blue",
fillOpacity = 0.3
) %>%
hc_add_series(
name = "Jubilación",
data = c(rep(NA, max_res-1), reservas[max_res:last_pos]),  # datos decreciendo de 150000 a 0
color = "green",
fillOpacity = 0.3
) %>%
hc_add_series(
name = "Jubilación -",
data = c(rep(NA, last_pos-1), reservas[(last_pos+1):length(reservas)]),  # datos decreciendo de 0 a -150000
color = "red",
fillOpacity=0.3
)
highchart() %>%
hc_chart(type = "area") %>%
hc_title(text = "Evolución de Reservas por Edad") %>%
hc_xAxis(categories = edad, title = list(text = "Edad")) %>%
hc_yAxis(title = list(text = "Reservas")) %>%
hc_tooltip(shared = TRUE, valueDecimals = 0) %>%
hc_plotOptions(area = list(
marker = list(enabled = FALSE),
enableMouseTracking = TRUE
)) %>%
hc_add_series(
name = "Aportación",
data = reservas[1:max_res],  # datos positivos hasta 150000
color = "blue",
fillOpacity = 0.3
) %>%
hc_add_series(
name = "Jubilación",
data = c(rep(NA, max_res-1), reservas[max_res:last_pos]),  # datos decreciendo de 150000 a 0
color = "green",
fillOpacity = 0.3
) %>%
hc_add_series(
name = "Jubilación -",
data = c(rep(NA, last_pos-1), reservas[(last_pos):length(reservas)]),  # datos decreciendo de 0 a -150000
color = "red",
fillOpacity=0.3
)
runApp()
>>>>>>> e841d4cf11b4e03d67997666162646f6445b7929
runApp()
