doce_pen <- pen*(1 + crec_pensiones)^(j-1)*12*axn(TM, x = edad_jubilacion + j -1, n=1, k=12, i = i_actuarial, payment = "immediate")
dec_ter <- pen*(1 + crec_pensiones)^(j-1)*axn(TM,x = edad_jubilacion + j -1, n = 1, i = i_actuarial, payment = "immediate")
dec_cua <- sbu_anio_jub*(1 + crec_SBU)^(j-1)*axn(TM,x = edad_jubilacion + j -1,n = 1,i = i_actuarial, payment = "immediate")
ev_res2[j,"gasto_anio"] <- round(doce_pen + dec_ter + dec_cua, 2)
ev_res2[j,"res_acum"]   <- ahorro_total_inicial*(1+i_actuarial) - ev_res2[j,"gasto_anio"]*0.6 # Falta capitalizar el ahorro alcanzado
#PROFE: Aqui no entiendo por que le capitaliza, si ese valor de ahorro_total_inicial ya esta al final del ultimo, y estos gastos estan evaluados al principio de la edad de jubilacion
}else{
doce_pen <- pen*(1 + crec_pensiones)^(j-1)*12*axn(TM, x = edad_jubilacion + j -1, n=1, k=12, i = i_actuarial, payment = "immediate")
dec_ter <- pen*(1 + crec_pensiones)^(j-1)*axn(TM,x = edad_jubilacion + j -1, n = 1, i = i_actuarial, payment = "immediate")
dec_cua <- sbu_anio_jub*(1 + crec_SBU)^(j-1)*axn(TM,x = edad_jubilacion + j -1,n = 1,i = i_actuarial, payment = "immediate")
ev_res2[j,"gasto_anio"] <- round(doce_pen + dec_ter + dec_cua, 2)
ev_res2[j,"res_acum"]   <- ev_res2[j-1,"res_acum"]*(1+i_actuarial) - ev_res2[j,"gasto_anio"]*0.6
}
}
}
edad <- c(ev_res[,2],ev_res2[,2])
reservas <- c(ev_res[,3],ev_res2[,3])
# Ahorro
edad_1 <- ev_res[,2]
reservas_1 <- ev_res[,3]
# Descenso con res positiva
x <- which.min(ev_res2[,3]>0)
edad_2 <- ev_res2[1:(x-1),2]
reservas_2 <- ev_res2[1:(x-1),3]
# Descenso negativo
edad_3 <- ev_res2[(x):nrow(ev_res2),2]
reservas_3 <- ev_res2[(x):nrow(ev_res2),3]
string_ahorro <- create_string(edad_1,reservas_1)
string_gasto_pos <- create_string(edad_2,reservas_2)
string_gasto_neg <- create_string(edad_3,reservas_3)
# return(list(string_ahorro,string_gasto_pos,string_gasto_neg))
return(ahorro_total_inicial)
}
for(i in rotar_edades){
for(j in rotar_salarios){
for (s in sexo) {
message("Para un sexo: ",s," de edad ",i," con salario ",j)
x <- Imprimir_Evolucion_Reservas_con_aporte40_con_decimos(sexo=s,edad_inicio=i,salario_ini=j)
print(x)
# print(x[[1]])
# print(x[[2]])
# print(x[[3]])
}
}
}
runApp()
Imprimir_Evolucion_Reservas_con_aporte40_con_decimos <- function(sexo,edad_inicio,salario_ini){
###################################################
crec_pensiones <- 1.8261/100; crec_pensiones_12 <- (1+crec_pensiones)^(1/12)-1
i_actuarial <- 6.2500 /100 #tasa actuarial
i_12 <- (1+i_actuarial)^(1/12) - 1
crec_SBU <- 2.5339/100; crec_SBU_12 <- (1+crec_SBU)^(1/12)-1 #superiodal
IVM <- 11.06/100
edad_jubilacion <- 60
salario_ini <- salario_ini
anio_inicio <- 2024
anio_fin <- anio_inicio + (edad_jubilacion-edad_inicio-1)
num_anios <- edad_jubilacion - edad_inicio
anio_muerte <- anio_fin+1 + (100-edad_jubilacion)
num_anios_pension <- length(c((anio_fin+1):anio_muerte))
# Crecimiento de la reserva ( cotizaciones )
ev_res <- data.frame(
anio = c(anio_inicio:anio_fin),
edad = c(edad_inicio:(edad_jubilacion-1)),
res_acum = numeric(num_anios)
)
if(salario_ini < sbu$sbu[sbu$anio==anio_inicio]){
salario_ini <- sbu$sbu[sbu$anio==anio_inicio]
incremento <-2.5339/100
}else{
incremento <- 0.02154
}
for (j in c(1:num_anios)) {
ev_res[j,3] <-  VSn(C = (salario_ini * IVM) * annuity(i = i_12, n=12, type = "immediate"),
q = (1+incremento) ,
n = j , #años de aporte hasta el momento
i = i_actuarial,
type = "due")
# Aportación extra del décimo tercer y décimo cuarto sueldo
ev_res[j,3] <- ev_res[j,3] + VSn(C = (salario_ini * IVM) * annuity(i = i_12, n=2, type = "immediate"),
q = (1+incremento) ,
n = j , #años de aporte hasta el momento
i = i_actuarial,
type = "due")
}
# Decrecimiento de la reserva ( pensiones )
pen <- Pension(edad_inicio, salario_ini, num_anios)[[1]]*(1+crec_pensiones)^(edad_jubilacion - (edad_inicio + 2024 - anio_inicio)) #ammy_estuvo_aqui
ahorro_total_inicial <- ev_res[nrow(ev_res),3]
# con el 40% del estado
ev_res2 <- data.frame(
anio = c((anio_fin+1):anio_muerte),
edad = c(edad_jubilacion:100),
res_acum = numeric(num_anios_pension),
gasto_anio = numeric(num_anios_pension)
)
x=edad_jubilacion
m = 12
i = crec_pensiones
#i = crec_pensiones
sbu_anio_jub <- 460*(1+crec_SBU)^(anio_fin-2024+1)
ahorro_total_inicial
for (j in c(1:num_anios_pension)) {
if (sexo=="M") {
if (j==1) {
doce_pen <- pen*(1 + crec_pensiones)^(j-1)*12*axn(TH, x = edad_jubilacion + j -1, n=1, k=12, i = i_actuarial, payment = "immediate")
dec_ter <- pen*(1 + crec_pensiones)^(j-1)*axn(TH,x = edad_jubilacion + j -1, n = 1, i = i_actuarial, payment = "immediate")
dec_cua <- sbu_anio_jub*(1 + crec_SBU)^(j-1)*axn(TH,x = edad_jubilacion + j -1,n = 1,i = i_actuarial, payment = "immediate")
ev_res2[j,"gasto_anio"] <- round(doce_pen + dec_ter + dec_cua, 2)
ev_res2[j,"res_acum"]   <- ahorro_total_inicial*(1+i_actuarial) - ev_res2[j,"gasto_anio"]*0.6 # Falta capitalizar el ahorro alcanzado
#PROFE: Aqui no entiendo por que le capitaliza, si ese valor de ahorro_total_inicial ya esta al final del ultimo, y estos gastos estan evaluados al principio de la edad de jubilacion
}else{
doce_pen <- pen*(1 + crec_pensiones)^(j-1)*12*axn(TH, x = edad_jubilacion + j -1, n=1, k=12, i = i_actuarial, payment = "immediate")
dec_ter <- pen*(1 + crec_pensiones)^(j-1)*axn(TH,x = edad_jubilacion + j -1, n = 1, i = i_actuarial, payment = "immediate")
dec_cua <- sbu_anio_jub*(1 + crec_SBU)^(j-1)*axn(TH,x = edad_jubilacion + j -1,n = 1,i = i_actuarial, payment = "immediate")
ev_res2[j,"gasto_anio"] <- round(doce_pen + dec_ter + dec_cua, 2)
ev_res2[j,"res_acum"]   <- ev_res2[j-1,"res_acum"]*(1+i_actuarial) - ev_res2[j,"gasto_anio"]*0.6
}
}else{
if (j==1) {
doce_pen <- pen*(1 + crec_pensiones)^(j-1)*12*axn(TM, x = edad_jubilacion + j -1, n=1, k=12, i = i_actuarial, payment = "immediate")
dec_ter <- pen*(1 + crec_pensiones)^(j-1)*axn(TM,x = edad_jubilacion + j -1, n = 1, i = i_actuarial, payment = "immediate")
dec_cua <- sbu_anio_jub*(1 + crec_SBU)^(j-1)*axn(TM,x = edad_jubilacion + j -1,n = 1,i = i_actuarial, payment = "immediate")
ev_res2[j,"gasto_anio"] <- round(doce_pen + dec_ter + dec_cua, 2)
ev_res2[j,"res_acum"]   <- ahorro_total_inicial*(1+i_actuarial) - ev_res2[j,"gasto_anio"]*0.6 # Falta capitalizar el ahorro alcanzado
#PROFE: Aqui no entiendo por que le capitaliza, si ese valor de ahorro_total_inicial ya esta al final del ultimo, y estos gastos estan evaluados al principio de la edad de jubilacion
}else{
doce_pen <- pen*(1 + crec_pensiones)^(j-1)*12*axn(TM, x = edad_jubilacion + j -1, n=1, k=12, i = i_actuarial, payment = "immediate")
dec_ter <- pen*(1 + crec_pensiones)^(j-1)*axn(TM,x = edad_jubilacion + j -1, n = 1, i = i_actuarial, payment = "immediate")
dec_cua <- sbu_anio_jub*(1 + crec_SBU)^(j-1)*axn(TM,x = edad_jubilacion + j -1,n = 1,i = i_actuarial, payment = "immediate")
ev_res2[j,"gasto_anio"] <- round(doce_pen + dec_ter + dec_cua, 2)
ev_res2[j,"res_acum"]   <- ev_res2[j-1,"res_acum"]*(1+i_actuarial) - ev_res2[j,"gasto_anio"]*0.6
}
}
}
edad <- c(ev_res[,2],ev_res2[,2])
reservas <- c(ev_res[,3],ev_res2[,3])
# Ahorro
edad_1 <- ev_res[,2]
reservas_1 <- ev_res[,3]
# Descenso con res positiva
x <- which.min(ev_res2[,3]>0)
edad_2 <- ev_res2[1:(x-1),2]
reservas_2 <- ev_res2[1:(x-1),3]
# Descenso negativo
edad_3 <- ev_res2[(x):nrow(ev_res2),2]
reservas_3 <- ev_res2[(x):nrow(ev_res2),3]
string_ahorro <- create_string(edad_1,reservas_1)
string_gasto_pos <- create_string(edad_2,reservas_2)
string_gasto_neg <- create_string(edad_3,reservas_3)
# return(list(string_ahorro,string_gasto_pos,string_gasto_neg))
return(ahorro_total_inicial)
}
for(i in rotar_edades){
for(j in rotar_salarios){
for (s in sexo) {
message("Para un sexo: ",s," de edad ",i," con salario ",j)
x <- Imprimir_Evolucion_Reservas_con_aporte40_con_decimos(sexo=s,edad_inicio=i,salario_ini=j)
print(x)
# print(x[[1]])
# print(x[[2]])
# print(x[[3]])
}
}
}
create_string <- function(vec1, vec2) {
# Combine the vectors into pairs
pairs <- paste0("(", vec1, ",", vec2, ")")
# Collapse the pairs into a single string
result <- paste(pairs, collapse = "")
return(result)
}
Imprimir_Evolucion_Reservas_con_aporte40_con_decimos <- function(sexo,edad_inicio,salario_ini){
###################################################
crec_pensiones <- 1.8261/100; crec_pensiones_12 <- (1+crec_pensiones)^(1/12)-1
i_actuarial <- 6.2500 /100 #tasa actuarial
i_12 <- (1+i_actuarial)^(1/12) - 1
crec_SBU <- 2.5339/100; crec_SBU_12 <- (1+crec_SBU)^(1/12)-1 #superiodal
IVM <- 11.06/100
edad_jubilacion <- 60
salario_ini <- salario_ini
anio_inicio <- 2024
anio_fin <- anio_inicio + (edad_jubilacion-edad_inicio-1)
num_anios <- edad_jubilacion - edad_inicio
anio_muerte <- anio_fin+1 + (100-edad_jubilacion)
num_anios_pension <- length(c((anio_fin+1):anio_muerte))
# Crecimiento de la reserva ( cotizaciones )
ev_res <- data.frame(
anio = c(anio_inicio:anio_fin),
edad = c(edad_inicio:(edad_jubilacion-1)),
res_acum = numeric(num_anios)
)
if(salario_ini < sbu$sbu[sbu$anio==anio_inicio]){
salario_ini <- sbu$sbu[sbu$anio==anio_inicio]
incremento <-2.5339/100
}else{
incremento <- 0.02154
}
for (j in c(1:num_anios)) {
ev_res[j,3] <-  VSn(C = (salario_ini * IVM) * annuity(i = i_12, n=12, type = "immediate"),
q = (1+incremento) ,
n = j , #años de aporte hasta el momento
i = i_actuarial,
type = "due")
# Aportación extra del décimo tercer y décimo cuarto sueldo
ev_res[j,3] <- ev_res[j,3] + VSn(C = (salario_ini * IVM) * annuity(i = i_12, n=2, type = "immediate"),
q = (1+incremento) ,
n = j , #años de aporte hasta el momento
i = i_actuarial,
type = "due")
}
# Decrecimiento de la reserva ( pensiones )
pen <- Pension(edad_inicio, salario_ini, num_anios)[[1]]*(1+crec_pensiones)^(edad_jubilacion - (edad_inicio + 2024 - anio_inicio)) #ammy_estuvo_aqui
ahorro_total_inicial <- ev_res[nrow(ev_res),3]
# con el 40% del estado
ev_res2 <- data.frame(
anio = c((anio_fin+1):anio_muerte),
edad = c(edad_jubilacion:100),
res_acum = numeric(num_anios_pension),
gasto_anio = numeric(num_anios_pension)
)
x=edad_jubilacion
m = 12
i = crec_pensiones
#i = crec_pensiones
sbu_anio_jub <- 460*(1+crec_SBU)^(anio_fin-2024+1)
ahorro_total_inicial
for (j in c(1:num_anios_pension)) {
if (sexo=="M") {
if (j==1) {
doce_pen <- pen*(1 + crec_pensiones)^(j-1)*12*axn(TH, x = edad_jubilacion + j -1, n=1, k=12, i = i_actuarial, payment = "immediate")
dec_ter <- pen*(1 + crec_pensiones)^(j-1)*axn(TH,x = edad_jubilacion + j -1, n = 1, i = i_actuarial, payment = "immediate")
dec_cua <- sbu_anio_jub*(1 + crec_SBU)^(j-1)*axn(TH,x = edad_jubilacion + j -1,n = 1,i = i_actuarial, payment = "immediate")
ev_res2[j,"gasto_anio"] <- round(doce_pen + dec_ter + dec_cua, 2)
ev_res2[j,"res_acum"]   <- ahorro_total_inicial*(1+i_actuarial) - ev_res2[j,"gasto_anio"]*0.6 # Falta capitalizar el ahorro alcanzado
#PROFE: Aqui no entiendo por que le capitaliza, si ese valor de ahorro_total_inicial ya esta al final del ultimo, y estos gastos estan evaluados al principio de la edad de jubilacion
}else{
doce_pen <- pen*(1 + crec_pensiones)^(j-1)*12*axn(TH, x = edad_jubilacion + j -1, n=1, k=12, i = i_actuarial, payment = "immediate")
dec_ter <- pen*(1 + crec_pensiones)^(j-1)*axn(TH,x = edad_jubilacion + j -1, n = 1, i = i_actuarial, payment = "immediate")
dec_cua <- sbu_anio_jub*(1 + crec_SBU)^(j-1)*axn(TH,x = edad_jubilacion + j -1,n = 1,i = i_actuarial, payment = "immediate")
ev_res2[j,"gasto_anio"] <- round(doce_pen + dec_ter + dec_cua, 2)
ev_res2[j,"res_acum"]   <- ev_res2[j-1,"res_acum"]*(1+i_actuarial) - ev_res2[j,"gasto_anio"]*0.6
}
}else{
if (j==1) {
doce_pen <- pen*(1 + crec_pensiones)^(j-1)*12*axn(TM, x = edad_jubilacion + j -1, n=1, k=12, i = i_actuarial, payment = "immediate")
dec_ter <- pen*(1 + crec_pensiones)^(j-1)*axn(TM,x = edad_jubilacion + j -1, n = 1, i = i_actuarial, payment = "immediate")
dec_cua <- sbu_anio_jub*(1 + crec_SBU)^(j-1)*axn(TM,x = edad_jubilacion + j -1,n = 1,i = i_actuarial, payment = "immediate")
ev_res2[j,"gasto_anio"] <- round(doce_pen + dec_ter + dec_cua, 2)
ev_res2[j,"res_acum"]   <- ahorro_total_inicial*(1+i_actuarial) - ev_res2[j,"gasto_anio"]*0.6 # Falta capitalizar el ahorro alcanzado
#PROFE: Aqui no entiendo por que le capitaliza, si ese valor de ahorro_total_inicial ya esta al final del ultimo, y estos gastos estan evaluados al principio de la edad de jubilacion
}else{
doce_pen <- pen*(1 + crec_pensiones)^(j-1)*12*axn(TM, x = edad_jubilacion + j -1, n=1, k=12, i = i_actuarial, payment = "immediate")
dec_ter <- pen*(1 + crec_pensiones)^(j-1)*axn(TM,x = edad_jubilacion + j -1, n = 1, i = i_actuarial, payment = "immediate")
dec_cua <- sbu_anio_jub*(1 + crec_SBU)^(j-1)*axn(TM,x = edad_jubilacion + j -1,n = 1,i = i_actuarial, payment = "immediate")
ev_res2[j,"gasto_anio"] <- round(doce_pen + dec_ter + dec_cua, 2)
ev_res2[j,"res_acum"]   <- ev_res2[j-1,"res_acum"]*(1+i_actuarial) - ev_res2[j,"gasto_anio"]*0.6
}
}
}
edad <- c(ev_res[,2],ev_res2[,2])
reservas <- c(ev_res[,3],ev_res2[,3])
# Ahorro
edad_1 <- ev_res[,2]
reservas_1 <- ev_res[,3]
# Descenso con res positiva
x <- which.min(ev_res2[,3]>0)
edad_2 <- ev_res2[1:(x-1),2]
reservas_2 <- ev_res2[1:(x-1),3]
# Descenso negativo
edad_3 <- ev_res2[(x):nrow(ev_res2),2]
reservas_3 <- ev_res2[(x):nrow(ev_res2),3]
string_ahorro <- create_string(edad_1,reservas_1)
string_gasto_pos <- create_string(edad_2,reservas_2)
string_gasto_neg <- create_string(edad_3,reservas_3)
return(list(string_ahorro,string_gasto_pos,string_gasto_neg))
# return(ahorro_total_inicial)
}
for(i in rotar_edades){
for(j in rotar_salarios){
for (s in sexo) {
message("Para un sexo: ",s," de edad ",i," con salario ",j)
x <- Imprimir_Evolucion_Reservas_con_aporte40_con_decimos(sexo=s,edad_inicio=i,salario_ini=j)
print(x)
# print(x[[1]])
# print(x[[2]])
# print(x[[3]])
}
}
}
runApp()
shiny::runApp()
rango_valores_min <- function(edad){
crec_SBU <- 2.5339/100
rango_valores_min <- list(
list(rango = c(0, 10 * 12), valor_punto = 230*(1+crec_SBU)^((2024 + 60 - edad)- 2024-1)),
list(rango = c(11 * 12, 20 * 12), valor_punto = 276*(1+crec_SBU)^((2024 + 60 - edad)- 2024-1)),
list(rango = c(21 * 12, 30 * 12), valor_punto = 322*(1+crec_SBU)^((2024 + 60 - edad)- 2024-1)),
list(rango = c(31 * 12, 35 * 12), valor_punto = 368*(1+crec_SBU)^((2024 + 60 - edad)- 2024-1)),
list(rango = c(36 * 12, 39 * 12), valor_punto = 414*(1+crec_SBU)^((2024 + 60 - edad)- 2024-1)),
list(rango = c(40 * 12, Inf), valor_punto = 460*(1+crec_SBU)^((2024 + 60 - edad)- 2024-1))
)
return(rango_valores_min)
}
source("~/TIC/Shiny-TIC/guias_shiny/Ammy_creacion_resultados/funciones_para_imprimir_datos_de_graficos.R", echo=TRUE)
rango_valores_min <- function(edad){
crec_SBU <- 2.5339/100
rango_valores_min <- list(
list(rango = c(0, 10 * 12), valor_punto = 230*(1+crec_SBU)^((2024 + 60 - edad)- 2024-1)),
list(rango = c(11 * 12, 20 * 12), valor_punto = 276*(1+crec_SBU)^((2024 + 60 - edad)- 2024-1)),
list(rango = c(21 * 12, 30 * 12), valor_punto = 322*(1+crec_SBU)^((2024 + 60 - edad)- 2024-1)),
list(rango = c(31 * 12, 35 * 12), valor_punto = 368*(1+crec_SBU)^((2024 + 60 - edad)- 2024-1)),
list(rango = c(36 * 12, 39 * 12), valor_punto = 414*(1+crec_SBU)^((2024 + 60 - edad)- 2024-1)),
list(rango = c(40 * 12, Inf), valor_punto = 460*(1+crec_SBU)^((2024 + 60 - edad)- 2024-1))
)
return(rango_valores_min)
}
rango_valores_max <- function(edad){
crec_SBU <- 2.5339/100
rango_valores_max <- list(
list(rango = c(0, 10 * 12), valor_punto = 1150*(1+crec_SBU)^((2024 + 60 - edad)- 2024-1)),
list(rango = c(15 * 12, 19 * 12), valor_punto = 1380*(1+crec_SBU)^((2024 + 60 - edad)- 2024-1)),
list(rango = c(20 * 12, 24 * 12), valor_punto = 1610*(1+crec_SBU)^((2024 + 60 - edad)- 2024-1)),
list(rango = c(25 * 12, 29 * 12), valor_punto = 1840*(1+crec_SBU)^((2024 + 60 - edad)- 2024-1)),
list(rango = c(30 * 12, 34 * 12), valor_punto = 2070*(1+crec_SBU)^((2024 + 60 - edad)- 2024-1)),
list(rango = c(35 * 12, 39 * 12), valor_punto = 2300*(1+crec_SBU)^((2024 + 60 - edad)- 2024-1)),
list(rango = c(4 * 120, Inf), valor_punto = 2530*(1+crec_SBU)^((2024 + 60 - edad)- 2024-1))
)
return(rango_valores_max)
}
Pension <- function(edad, salario, anios_aporte){
anio_inicio <- 2024
if(salario < sbu$sbu[sbu$anio==anio_inicio]){
salario <- sbu$sbu[sbu$anio==anio_inicio]
incremento <-2.5339/100
}else{
incremento <- 0.02154
}
# Creamos un vector con los últimos 5 mejores salarios
mejores_5_salarios <- sapply(1:5, function(i) {
salario * (1 + incremento)^(anios_aporte - i)
})
# pension = promedio * coef
prom <- sum(mejores_5_salarios) / 5
coef <- Coeficiente$Coef[Coeficiente$An.Imposiciones == anios_aporte]
pension <- prom * coef
pension <- ajustar_pension_min(anios_aporte*12, pension, rango_valores_min(edad))
pension <- ajustar_pension_max(anios_aporte*12, pension, rango_valores_max(edad))
return(list(pension, prom))
}
Imprimir_Evolucion_Reservas_con_aporte40_con_decimos <- function(sexo,edad_inicio,salario_ini){
###################################################
crec_pensiones <- 1.8261/100; crec_pensiones_12 <- (1+crec_pensiones)^(1/12)-1
i_actuarial <- 6.2500 /100 #tasa actuarial
i_12 <- (1+i_actuarial)^(1/12) - 1
crec_SBU <- 2.5339/100; crec_SBU_12 <- (1+crec_SBU)^(1/12)-1 #superiodal
IVM <- 11.06/100
edad_jubilacion <- 60
salario_ini <- salario_ini
anio_inicio <- 2024
anio_fin <- anio_inicio + (edad_jubilacion-edad_inicio-1)
num_anios <- edad_jubilacion - edad_inicio
anio_muerte <- anio_fin+1 + (100-edad_jubilacion)
num_anios_pension <- length(c((anio_fin+1):anio_muerte))
# Crecimiento de la reserva ( cotizaciones )
ev_res <- data.frame(
anio = c(anio_inicio:anio_fin),
edad = c(edad_inicio:(edad_jubilacion-1)),
res_acum = numeric(num_anios)
)
if(salario_ini < sbu$sbu[sbu$anio==anio_inicio]){
salario_ini <- sbu$sbu[sbu$anio==anio_inicio]
incremento <-2.5339/100
}else{
incremento <- 0.02154
}
for (j in c(1:num_anios)) {
ev_res[j,3] <-  VSn(C = (salario_ini * IVM) * annuity(i = i_12, n=12, type = "immediate"),
q = (1+incremento) ,
n = j , #años de aporte hasta el momento
i = i_actuarial,
type = "due")
# Aportación extra del décimo tercer y décimo cuarto sueldo
ev_res[j,3] <- ev_res[j,3] + VSn(C = (salario_ini * IVM) * annuity(i = i_12, n=2, type = "immediate"),
q = (1+incremento) ,
n = j , #años de aporte hasta el momento
i = i_actuarial,
type = "due")
}
# Decrecimiento de la reserva ( pensiones )
pen <- Pension(edad_inicio, salario_ini, num_anios)[[1]]*(1+crec_pensiones)^(edad_jubilacion - (edad_inicio + 2024 - anio_inicio)) #ammy_estuvo_aqui
ahorro_total_inicial <- ev_res[nrow(ev_res),3]
# con el 40% del estado
ev_res2 <- data.frame(
anio = c((anio_fin+1):anio_muerte),
edad = c(edad_jubilacion:100),
res_acum = numeric(num_anios_pension),
gasto_anio = numeric(num_anios_pension)
)
x=edad_jubilacion
m = 12
i = crec_pensiones
#i = crec_pensiones
sbu_anio_jub <- 460*(1+crec_SBU)^(anio_fin-2024+1)
ahorro_total_inicial
for (j in c(1:num_anios_pension)) {
if (sexo=="M") {
if (j==1) {
doce_pen <- pen*(1 + crec_pensiones)^(j-1)*12*axn(TH, x = edad_jubilacion + j -1, n=1, k=12, i = i_actuarial, payment = "immediate")
dec_ter <- pen*(1 + crec_pensiones)^(j-1)*axn(TH,x = edad_jubilacion + j -1, n = 1, i = i_actuarial, payment = "immediate")
dec_cua <- sbu_anio_jub*(1 + crec_SBU)^(j-1)*axn(TH,x = edad_jubilacion + j -1,n = 1,i = i_actuarial, payment = "immediate")
ev_res2[j,"gasto_anio"] <- round(doce_pen + dec_ter + dec_cua, 2)
ev_res2[j,"res_acum"]   <- ahorro_total_inicial*(1+i_actuarial) - ev_res2[j,"gasto_anio"]*0.6 # Falta capitalizar el ahorro alcanzado
#PROFE: Aqui no entiendo por que le capitaliza, si ese valor de ahorro_total_inicial ya esta al final del ultimo, y estos gastos estan evaluados al principio de la edad de jubilacion
}else{
doce_pen <- pen*(1 + crec_pensiones)^(j-1)*12*axn(TH, x = edad_jubilacion + j -1, n=1, k=12, i = i_actuarial, payment = "immediate")
dec_ter <- pen*(1 + crec_pensiones)^(j-1)*axn(TH,x = edad_jubilacion + j -1, n = 1, i = i_actuarial, payment = "immediate")
dec_cua <- sbu_anio_jub*(1 + crec_SBU)^(j-1)*axn(TH,x = edad_jubilacion + j -1,n = 1,i = i_actuarial, payment = "immediate")
ev_res2[j,"gasto_anio"] <- round(doce_pen + dec_ter + dec_cua, 2)
ev_res2[j,"res_acum"]   <- ev_res2[j-1,"res_acum"]*(1+i_actuarial) - ev_res2[j,"gasto_anio"]*0.6
}
}else{
if (j==1) {
doce_pen <- pen*(1 + crec_pensiones)^(j-1)*12*axn(TM, x = edad_jubilacion + j -1, n=1, k=12, i = i_actuarial, payment = "immediate")
dec_ter <- pen*(1 + crec_pensiones)^(j-1)*axn(TM,x = edad_jubilacion + j -1, n = 1, i = i_actuarial, payment = "immediate")
dec_cua <- sbu_anio_jub*(1 + crec_SBU)^(j-1)*axn(TM,x = edad_jubilacion + j -1,n = 1,i = i_actuarial, payment = "immediate")
ev_res2[j,"gasto_anio"] <- round(doce_pen + dec_ter + dec_cua, 2)
ev_res2[j,"res_acum"]   <- ahorro_total_inicial*(1+i_actuarial) - ev_res2[j,"gasto_anio"]*0.6 # Falta capitalizar el ahorro alcanzado
#PROFE: Aqui no entiendo por que le capitaliza, si ese valor de ahorro_total_inicial ya esta al final del ultimo, y estos gastos estan evaluados al principio de la edad de jubilacion
}else{
doce_pen <- pen*(1 + crec_pensiones)^(j-1)*12*axn(TM, x = edad_jubilacion + j -1, n=1, k=12, i = i_actuarial, payment = "immediate")
dec_ter <- pen*(1 + crec_pensiones)^(j-1)*axn(TM,x = edad_jubilacion + j -1, n = 1, i = i_actuarial, payment = "immediate")
dec_cua <- sbu_anio_jub*(1 + crec_SBU)^(j-1)*axn(TM,x = edad_jubilacion + j -1,n = 1,i = i_actuarial, payment = "immediate")
ev_res2[j,"gasto_anio"] <- round(doce_pen + dec_ter + dec_cua, 2)
ev_res2[j,"res_acum"]   <- ev_res2[j-1,"res_acum"]*(1+i_actuarial) - ev_res2[j,"gasto_anio"]*0.6
}
}
}
edad <- c(ev_res[,2],ev_res2[,2])
reservas <- c(ev_res[,3],ev_res2[,3])
# Ahorro
edad_1 <- ev_res[,2]
reservas_1 <- ev_res[,3]
# Descenso con res positiva
x <- which.min(ev_res2[,3]>0)
edad_2 <- ev_res2[1:(x-1),2]
reservas_2 <- ev_res2[1:(x-1),3]
# Descenso negativo
edad_3 <- ev_res2[(x):nrow(ev_res2),2]
reservas_3 <- ev_res2[(x):nrow(ev_res2),3]
string_ahorro <- create_string(edad_1,reservas_1)
string_gasto_pos <- create_string(edad_2,reservas_2)
string_gasto_neg <- create_string(edad_3,reservas_3)
return(list(string_ahorro,string_gasto_pos,string_gasto_neg))
# return(ahorro_total_inicial)
}
create_string <- function(vec1, vec2) {
# Combine the vectors into pairs
pairs <- paste0("(", vec1, ",", vec2, ")")
# Collapse the pairs into a single string
result <- paste(pairs, collapse = "")
return(result)
}
v1 <- seq(1,152)
v2 <- c(seq(101,0),seq(-1,-50))
x <- which.min(v2>0)
view(v2)
rotar_edades <- c(50)
rotar_salarios <- c(1563)
sexo <- c("M")#,"F")
for(i in rotar_edades){
for(j in rotar_salarios){
for (s in sexo) {
message("Para un sexo: ",s," de edad ",i," con salario ",j)
x <- Imprimir_Evolucion_Reservas_con_aporte40_con_decimos(sexo=s,edad_inicio=i,salario_ini=j)
print(x)
# print(x[[1]])
# print(x[[2]])
# print(x[[3]])
}
}
}
rotar_edades <- c(50)
rotar_salarios <- c(1563)
sexo <- c("F")#,"F")
for(i in rotar_edades){
for(j in rotar_salarios){
for (s in sexo) {
message("Para un sexo: ",s," de edad ",i," con salario ",j)
x <- Imprimir_Evolucion_Reservas_con_aporte40_con_decimos(sexo=s,edad_inicio=i,salario_ini=j)
print(x)
# print(x[[1]])
# print(x[[2]])
# print(x[[3]])
}
}
}
rotar_edades <- c(45)
rotar_salarios <- c(1563)
sexo <- c("M")#,"F")
for(i in rotar_edades){
for(j in rotar_salarios){
for (s in sexo) {
message("Para un sexo: ",s," de edad ",i," con salario ",j)
x <- Imprimir_Evolucion_Reservas_con_aporte40_con_decimos(sexo=s,edad_inicio=i,salario_ini=j)
print(x)
# print(x[[1]])
# print(x[[2]])
# print(x[[3]])
}
}
}
runApp()
